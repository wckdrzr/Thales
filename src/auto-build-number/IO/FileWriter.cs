using System;
using System.IO;
using System.Text.Json;
using Wckdrzr.AutomaticBuildNumber.Config;

namespace Wckdrzr.AutomaticBuildNumber.IO
{
	public class FileWriter
	{
		private config VersionDetails;
		private string ConfigFilename;

		public FileWriter(string configFilename)
		{
			VersionDetails = JsonSerializer.Deserialize<config>(File.ReadAllText(configFilename));
			ConfigFilename = configFilename;
		}

		public bool WriteConfigUpdate()
        {
			string result = JsonSerializer.Serialize<config>(VersionDetails);

			try
			{
				File.WriteAllText(ConfigFilename, result);
			}
			catch (Exception ex)
			{
				Console.WriteLine($"Error Encountered: {ex.Message}");
				return false;
			}
			return true;
		}

		public bool WriteAssemblyInfoFile()
		{
			string[] fileContents =
			{
				"using System.Reflection;",
				"using System.Runtime.InteropServices;",
				" ",
				$"[assembly: AssemblyCompany(\"{VersionDetails.Company}\")]",
				$"[assembly: AssemblyProduct(\"{VersionDetails.ProductName}\")]",
				$"[assembly: AssemblyCopyright(\"{VersionDetails.Copyright}\")]",
				" ",
				$"[assembly: AssemblyVersion(\"{VersionDetails.VersionNumber()}\")]"
			};

			try
			{
				File.WriteAllLines($"../../../{VersionDetails.OutputFileName}.cs", fileContents);
			}
            catch (Exception ex)
            {
				Console.WriteLine($"Error Encountered: {ex.Message}");
				return false;
            }

			return true;

		}

		public bool WriteVersionRoute()
        {
			string[] fileContents =
			{
			"using Microsoft.AspNetCore.Mvc;",
			" ",
			"namespace WCKDRZR.AutoGenerated.Controllers",
			"{",
			"	[ApiController]",
			"	public class VersionController : ControllerBase",
			"	{",
			" ",
			"		[HttpGet]",
			"		[Route(\"[controller]\")]",
			"		public string Get()",
			"       {",
			"			return System.Reflection.Assembly.GetExecutingAssembly().GetName().Version.ToString();",
			"		}",
			"	}",
			"}"
			};

			try
			{
				File.WriteAllLines($"../../../Controllers/VersionController.cs", fileContents);
			}
			catch (Exception ex)
			{
				Console.WriteLine($"Error Encountered: {ex.Message}");
				return false;
			}

			return true;
		}
	}
}

